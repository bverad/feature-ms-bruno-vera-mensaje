name: CI

on:
  
  push:
  workflow_dispatch:

jobs:
  
  build:    
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3

      - name: Build
        run: |
          chmod +x gradlew 
          ./gradlew build 
          ls -ltr

      - name: SonarCloud Analysis
        run: |
          chmod +x gradlew 
          ./gradlew build sonar -Dsonar.token=${{ secrets.TOKEN_SONARCLOUD }} 

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.TOKEN_SONARCLOUD }} 
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          scanMetadataReportFile: build/sonar/report-task.txt   

      # generates coverage-report.md and publishes as checkrun
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v4.9
        with:
          coverage_results_path: jacoco-report/test.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GH_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false

      # Publish Coverage Job Summary  # Optional
      - name: Add Coverage Job Summary
        run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY

      # uploads the coverage-report.md artifact  # Optional

      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report-markdown
          path: "*/coverage-results.md"
          retention-days: 1


      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Copia de Jar a Raiz de proyecto
        run: |
          cp $GITHUB_WORKSPACE/build/libs/testing-web-0.0.1-SNAPSHOT.jar .
          chmod 777 testing-web-0.0.1-SNAPSHOT.jar
          ls -lt 
      
      - name: Docker Build
        run: | 
          docker build --tag bverad/testing-web:latest .
          docker images

      - name: Docker Push
        run: |
          docker push bverad/testing-web 

  deploy: 
    runs-on: self-hosted 
    needs: build
    steps: 

    - uses: actions/checkout@v3
    
    - name: Deploy to Minikube
      run: |
        kubectl apply -f deployment.yml

  acceptanceTests:

    runs-on: self-hosted
    needs: deploy
    steps:
  
      - uses: actions/checkout@v3
  
      - name: Postman
        uses: matt-ball/newman-action@master
        with:
          collection: testing-web-collection.postman_collection.json
          environment: testing-web-env.postman_environment.json

      

    
        
          
